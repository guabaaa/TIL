{"ast":null,"code":"var _jsxFileName = \"/Users/cho-eunjin/git/TIL/react/rockpaperscissor/src/App.js\",\n  _s = $RefreshSig$();\nimport { logRoles } from \"@testing-library/react\";\nimport { useState } from \"react\";\nimport \"./App.css\";\nimport Box from \"./component/Box\";\n\n// 1. 박스 2개 (타이틀, 사진정보, 결과)\n// 2. 가위 바위 보 버튼이 있다.\n// 3. 버튼을 클릭하면 클릭한 값이 박스에 보임\n// 4. 컴퓨터는 랜덤하게 아이템 선택이 된다\n// 5. 3,4번의 결과를 가지고 누가 이겼는지 승패를 따진다\n// 6. 승패결과에 따라 테두리 색이 바뀐다 (이기면-초록, 지면-빨강, 비기면-검정)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst choice = {\n  rock: {\n    name: \"Rock\",\n    img: \"https://nationaltoday.com/wp-content/uploads/2021/08/National-Pet-Rock-Day-640x514.jpg\"\n  },\n  scissors: {\n    name: \"Scissors\",\n    img: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcS8koGHkkb04TpSTwILD3b4sew42Z6500F6Cg&usqp=CAU\"\n  },\n  paper: {\n    name: \"Paper\",\n    img: \"https://www.collinsdictionary.com/images/full/paper_111691001.jpg\"\n  }\n};\nfunction App() {\n  _s();\n  const [userSelect, setUserSelect] = useState(null);\n  const [computerSelect, setComputerSelect] = useState(null);\n  const [result, setResult] = useState(\"\");\n  const play = userChoice => {\n    setUserSelect(choice[userChoice]);\n    let computerChoice = randomChoice();\n    setComputerSelect(computerChoice);\n    judgement(choice[userChoice], computerChoice);\n  };\n  const judgement = (user, computer) => {\n    console.log(\"user\", user, \"computer\", computer);\n\n    // user == computer tie\n    // user == rock, computer ==\"scissors\" user win\n    // user == \"rock\" , computer == paper user lose\n    // user == scissors , computer == \"paper\" user win\n    // user == scissors , computer == \"rock\" user lose\n    // user == paper , computer == \"rock\" user win\n    // user == paper, compter == \"scissors\" user lose\n\n    if (user.name == computer.name) {\n      return \"tie\";\n    } else if (user.name == \"Rock\") return computer.name == \"Scissors\" ? \"win\" : \"lose\";else if (user.name == \"Scissors\") return computer.name == \"Paper\" ? \"win\" : \"lose\";else if (user.name == \"Paper\") return computer.name == \"Rock\" ? \"win\" : \"lose\";\n  };\n  const randomChoice = () => {\n    let itemArray = Object.keys(choice); // 객체에 키값만 뽑아서 Array로 만들어주는 함수\n    console.log(\"item array\", itemArray);\n    let randomItem = Math.floor(Math.random() * itemArray.length);\n    let final = itemArray[randomItem];\n    return choice[final];\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        title: \"You\",\n        item: userSelect,\n        result: result\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        title: \"Computer\",\n        item: computerSelect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => play(\"scissors\"),\n        children: \"\\uAC00\\uC704\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => play(\"rock\"),\n        children: \"\\uBC14\\uC704\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => play(\"paper\"),\n        children: \"\\uBCF4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"m1w7DxbFkBsEKjKSO0yxpTEPnbc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logRoles","useState","Box","choice","rock","name","img","scissors","paper","App","userSelect","setUserSelect","computerSelect","setComputerSelect","result","setResult","play","userChoice","computerChoice","randomChoice","judgement","user","computer","console","log","itemArray","Object","keys","randomItem","Math","floor","random","length","final"],"sources":["/Users/cho-eunjin/git/TIL/react/rockpaperscissor/src/App.js"],"sourcesContent":["import { logRoles } from \"@testing-library/react\";\nimport { useState } from \"react\";\nimport \"./App.css\";\nimport Box from \"./component/Box\";\n\n// 1. 박스 2개 (타이틀, 사진정보, 결과)\n// 2. 가위 바위 보 버튼이 있다.\n// 3. 버튼을 클릭하면 클릭한 값이 박스에 보임\n// 4. 컴퓨터는 랜덤하게 아이템 선택이 된다\n// 5. 3,4번의 결과를 가지고 누가 이겼는지 승패를 따진다\n// 6. 승패결과에 따라 테두리 색이 바뀐다 (이기면-초록, 지면-빨강, 비기면-검정)\n\nconst choice = {\n  rock: {\n    name: \"Rock\",\n    img: \"https://nationaltoday.com/wp-content/uploads/2021/08/National-Pet-Rock-Day-640x514.jpg\",\n  },\n  scissors: {\n    name: \"Scissors\",\n    img: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcS8koGHkkb04TpSTwILD3b4sew42Z6500F6Cg&usqp=CAU\",\n  },\n  paper: {\n    name: \"Paper\",\n    img: \"https://www.collinsdictionary.com/images/full/paper_111691001.jpg\",\n  },\n};\nfunction App() {\n  const [userSelect, setUserSelect] = useState(null);\n  const [computerSelect, setComputerSelect] = useState(null);\n  const [result, setResult] = useState(\"\");\n  const play = (userChoice) => {\n    setUserSelect(choice[userChoice]);\n    let computerChoice = randomChoice();\n    setComputerSelect(computerChoice);\n    judgement(choice[userChoice], computerChoice);\n  };\n\n  const judgement = (user, computer) => {\n    console.log(\"user\", user, \"computer\", computer);\n\n    // user == computer tie\n    // user == rock, computer ==\"scissors\" user win\n    // user == \"rock\" , computer == paper user lose\n    // user == scissors , computer == \"paper\" user win\n    // user == scissors , computer == \"rock\" user lose\n    // user == paper , computer == \"rock\" user win\n    // user == paper, compter == \"scissors\" user lose\n\n    if (user.name == computer.name) {\n      return \"tie\";\n    } else if (user.name == \"Rock\")\n      return computer.name == \"Scissors\" ? \"win\" : \"lose\";\n    else if (user.name == \"Scissors\")\n      return computer.name == \"Paper\" ? \"win\" : \"lose\";\n    else if (user.name == \"Paper\")\n      return computer.name == \"Rock\" ? \"win\" : \"lose\";\n  };\n\n  const randomChoice = () => {\n    let itemArray = Object.keys(choice); // 객체에 키값만 뽑아서 Array로 만들어주는 함수\n    console.log(\"item array\", itemArray);\n    let randomItem = Math.floor(Math.random() * itemArray.length);\n    let final = itemArray[randomItem];\n    return choice[final];\n  };\n\n  return (\n    <div>\n      <div className=\"main\">\n        <Box title=\"You\" item={userSelect} result={result} />\n        <Box title=\"Computer\" item={computerSelect} />\n      </div>\n      <div className=\"main\">\n        <button onClick={() => play(\"scissors\")}>가위</button>\n        <button onClick={() => play(\"rock\")}>바위</button>\n        <button onClick={() => play(\"paper\")}>보</button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}