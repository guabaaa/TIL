{"ast":null,"code":"let initialState = {\n  count: 0\n};\nfunction reducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  console.log(\"action\", action);\n  if (action.type === \"INCREMENT\") {\n    return {\n      ...state,\n      count: state.count + 1\n    };\n  }\n  return {\n    ...state\n  };\n}\nexport default reducer;","map":{"version":3,"names":["initialState","count","reducer","state","action","console","log","type"],"sources":["/Users/cho-eunjin/git/react/redux-practice/src/redux/reducer/reducer.js"],"sourcesContent":["let initialState = {\n  count: 0,\n};\n\nfunction reducer(state = initialState, action) {\n  console.log(\"action\", action);\n  if (action.type === \"INCREMENT\") {\n    return { ...state, count: state.count + 1 };\n  }\n\n  return { ...state };\n}\n\nexport default reducer;\n"],"mappings":"AAAA,IAAIA,YAAY,GAAG;EACjBC,KAAK,EAAE;AACT,CAAC;AAED,SAASC,OAAO,GAA+B;EAAA,IAA9BC,KAAK,uEAAGH,YAAY;EAAA,IAAEI,MAAM;EAC3CC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEF,MAAM,CAAC;EAC7B,IAAIA,MAAM,CAACG,IAAI,KAAK,WAAW,EAAE;IAC/B,OAAO;MAAE,GAAGJ,KAAK;MAAEF,KAAK,EAAEE,KAAK,CAACF,KAAK,GAAG;IAAE,CAAC;EAC7C;EAEA,OAAO;IAAE,GAAGE;EAAM,CAAC;AACrB;AAEA,eAAeD,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}