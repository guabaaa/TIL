{"ast":null,"code":"let initialState = {\n  count: 0\n};\nfunction reducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  console.log(\"action\", action);\n  switch (action.type) {\n    case \"INCREMENT\":\n      return {\n        ...state,\n        count: state.count + action.payload.num\n      };\n    case \"LOGIN\":\n      return {\n        ...state,\n        id: action.payload.id,\n        password: action.payload.password\n      };\n      defalut: return {\n        ...state\n      };\n  }\n}\nexport default reducer;","map":{"version":3,"names":["initialState","count","reducer","state","action","console","log","type","payload","num","id","password","defalut"],"sources":["/Users/cho-eunjin/git/react/redux-practice/src/redux/reducer/reducer.js"],"sourcesContent":["let initialState = {\n  count: 0,\n};\n\nfunction reducer(state = initialState, action) {\n  console.log(\"action\", action);\n  switch (action.type) {\n    case \"INCREMENT\":\n      return { ...state, count: state.count + action.payload.num };\n    case \"LOGIN\":\n      return {\n        ...state,\n        id: action.payload.id,\n        password: action.payload.password,\n      };\n      defalut: return { ...state };\n  }\n}\n\nexport default reducer;\n"],"mappings":"AAAA,IAAIA,YAAY,GAAG;EACjBC,KAAK,EAAE;AACT,CAAC;AAED,SAASC,OAAO,GAA+B;EAAA,IAA9BC,KAAK,uEAAGH,YAAY;EAAA,IAAEI,MAAM;EAC3CC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEF,MAAM,CAAC;EAC7B,QAAQA,MAAM,CAACG,IAAI;IACjB,KAAK,WAAW;MACd,OAAO;QAAE,GAAGJ,KAAK;QAAEF,KAAK,EAAEE,KAAK,CAACF,KAAK,GAAGG,MAAM,CAACI,OAAO,CAACC;MAAI,CAAC;IAC9D,KAAK,OAAO;MACV,OAAO;QACL,GAAGN,KAAK;QACRO,EAAE,EAAEN,MAAM,CAACI,OAAO,CAACE,EAAE;QACrBC,QAAQ,EAAEP,MAAM,CAACI,OAAO,CAACG;MAC3B,CAAC;MACDC,OAAO,EAAE,OAAO;QAAE,GAAGT;MAAM,CAAC;EAAC;AAEnC;AAEA,eAAeD,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}